export declare const API_ENDPOINTS: {
    STUDENTS: {
        GET_ALL: string;
        GET_BY_ID: (id: string) => string;
        CREATE: string;
        UPDATE: (id: string) => string;
        DELETE: (id: string) => string;
        SEARCH: string;
        COUNT_BY_GRADE: string;
        COUNT_ACTIVE: string;
        UPDATE_ATTENDANCE: (studentId: string) => string;
        GET_DEPENDENCIES: (id: string) => string;
        DELETE_HIERARCHICALLY: (id: string) => string;
    };
    PARENTS: {
        GET_ALL: string;
        GET_BY_ID: (id: string) => string;
        CREATE: string;
        UPDATE: (id: string) => string;
        DELETE: (id: string) => string;
        SEARCH: string;
        GET_STATS: string;
    };
    STUDENT_SUMMARIES: {
        GET_ALL: string;
        GET_BY_ID: (id: string) => string;
        CREATE: string;
        UPDATE: (id: string) => string;
        DELETE: (id: string) => string;
        SEARCH: string;
        GET_STATS: string;
    };
    ATTENDANCE: {
        GET_ALL: string;
        GET_BY_ID: (id: string) => string;
        CREATE: string;
        UPDATE: (id: string) => string;
        DELETE: (id: string) => string;
        SEARCH: string;
        GET_BY_STUDENT: (studentId: string) => string;
        GET_BY_DATE: (date: string) => string;
        GET_BY_DATE_RANGE: string;
        GET_STUDENT_STATISTICS: (studentId: string) => string;
        GET_DAILY_SUMMARY: (date: string) => string;
        GET_MONTHLY_STATISTICS: (year: string, month: string) => string;
        GET_STATUS_STATISTICS: string;
        GET_ISSUES: string;
        CREATE_BULK: string;
        COPY: string;
        GET_RECORDS: string;
        GET_RECORD_BY_ID: (id: string) => string;
        CREATE_RECORD: string;
        UPDATE_RECORD: (id: string) => string;
        DELETE_RECORD: (id: string) => string;
        GET_STATS: string;
        BULK_UPDATE: string;
    };
    COURSES: {
        GET_ALL: string;
        GET_BY_ID: (id: string) => string;
        CREATE: string;
        UPDATE: (id: string) => string;
        DELETE: (id: string) => string;
        SEARCH: string;
        GET_STATS: string;
    };
    CLASS_SECTIONS: {
        GET_ALL: string;
        GET_BY_ID: (id: string) => string;
        CREATE: string;
        CREATE_WITH_COURSE: string;
        UPDATE: (id: string) => string;
        DELETE: (id: string) => string;
        SEARCH: string;
        GET_BY_TEACHER: (teacherId: string) => string;
        GET_BY_COURSE: (courseId: string) => string;
        GET_BY_CLASSROOM: (classroomId: string) => string;
        GET_STATS: string;
        GET_DEPENDENCIES: (id: string) => string;
        DELETE_HIERARCHICALLY: (id: string) => string;
        ADD_STUDENT: (classSectionId: string, studentId: string) => string;
        REMOVE_STUDENT: (classSectionId: string, studentId: string) => string;
        GET_ENROLLED_STUDENTS: (classSectionId: string) => string;
    };
    STUDENT_TIMETABLES: {
        GET_ALL: string;
        GET_BY_ID: (id: string) => string;
        CREATE: string;
        UPDATE: (id: string) => string;
        DELETE: (id: string) => string;
        GET_BY_STUDENT: (studentId: string) => string;
        GET_BY_STUDENT_AND_VERSION: (studentId: string, versionId: string) => string;
        ADD_CLASS: (studentId: string) => string;
        ADD_CLASS_BY_VERSION: (studentId: string, versionId: string) => string;
        REMOVE_CLASS: (studentId: string) => string;
        REMOVE_CLASS_BY_VERSION: (studentId: string, versionId: string) => string;
    };
    TIMETABLE_VERSIONS: {
        GET_ALL: string;
        GET_ACTIVE: string;
        GET_BY_ID: (id: string) => string;
        CREATE: string;
        UPDATE: (id: string) => string;
        DELETE: (id: string) => string;
        ACTIVATE: (id: string) => string;
        COPY: (sourceVersionId: string) => string;
        BULK_INITIALIZE: (versionId: string) => string;
        MIGRATION_STATUS: string;
        MIGRATE: (versionId: string) => string;
    };
    TIMETABLES: {
        GET_ALL: string;
        GET_BY_ID: (id: string) => string;
        CREATE: string;
        UPDATE: (id: string) => string;
        DELETE: (id: string) => string;
        SEARCH: string;
        GET_STATS: string;
    };
    TIMETABLE_ITEMS: {
        GET_ALL: string;
        GET_BY_ID: (id: string) => string;
        CREATE: string;
        UPDATE: (id: string) => string;
        DELETE: (id: string) => string;
        GET_BY_TIMETABLE: (timetableId: string) => string;
        SEARCH: string;
        GET_STATS: string;
    };
    TEACHERS: {
        GET_ALL: string;
        GET_BY_ID: (id: string) => string;
        CREATE: string;
        UPDATE: (id: string) => string;
        DELETE: (id: string) => string;
        SEARCH: string;
        GET_STATS: string;
        GET_DEPENDENCIES: (id: string) => string;
        DELETE_HIERARCHICALLY: (id: string) => string;
    };
    CLASSROOMS: {
        GET_ALL: string;
        GET_BY_ID: (id: string) => string;
        CREATE: string;
        UPDATE: (id: string) => string;
        DELETE: (id: string) => string;
        SEARCH: string;
        GET_STATS: string;
        GET_DEPENDENCIES: (id: string) => string;
        DELETE_HIERARCHICALLY: (id: string) => string;
    };
    TIME_SLOTS: {
        GET_ALL: string;
        GET_BY_ID: (id: string) => string;
        CREATE: string;
        UPDATE: (id: string) => string;
        DELETE: (id: string) => string;
        GET_BY_ORDER: string;
        GET_CLASS_TIME_SLOTS: string;
        GET_BREAK_TIME_SLOTS: string;
        SEARCH: string;
        GET_STATS: string;
        REORDER: string;
    };
    SEATS: {
        GET_ALL: string;
        GET_BY_ID: (id: string) => string;
        CREATE: string;
        UPDATE: (id: string) => string;
        DELETE: (id: string) => string;
        GET_ACTIVE: string;
        GET_AVAILABLE: string;
        GET_BY_NUMBER: string;
        GET_BY_STATUS: (status: string) => string;
        SEARCH: string;
        GET_STATS: string;
        UPDATE_STATUS: (id: string) => string;
        TOGGLE_ACTIVE: (id: string) => string;
        GET_NEXT_AVAILABLE_NUMBER: string;
        CREATE_BATCH: string;
        DEACTIVATE_BATCH: string;
        GET_BY_STUDENT: (studentId: string) => string;
    };
    SEAT_ASSIGNMENTS: {
        GET_ALL: string;
        GET_BY_ID: (id: string) => string;
        CREATE: string;
        UPDATE: (id: string) => string;
        DELETE: (id: string) => string;
        GET_ACTIVE: string;
        GET_BY_SEAT: (seatId: string) => string;
        GET_BY_STUDENT: (studentId: string) => string;
        GET_BY_DATE: (date: string) => string;
        SEARCH: string;
        GET_STATS: string;
        UPDATE_STATUS: (id: string) => string;
        RELEASE: (id: string) => string;
        GET_CURRENT_BY_STUDENT: (studentId: string) => string;
        GET_CURRENT_BY_SEAT: (seatId: string) => string;
        GET_HISTORY_BY_STUDENT: (studentId: string) => string;
        GET_HISTORY_BY_SEAT: (seatId: string) => string;
    };
    TEST_DATA: {
        INITIALIZE_ALL: string;
        INITIALIZE_STUDENTS: string;
        INITIALIZE_TEACHERS: string;
        CLEAR_STUDENTS: string;
        CLEAR_TEACHERS: string;
        CLEAR_ALL: string;
        GET_STATUS: string;
    };
    SYSTEM: {
        ROOT: string;
        HEALTH: string;
        VERSION: string;
    };
};
export declare const HTTP_METHODS: {
    readonly GET: "GET";
    readonly POST: "POST";
    readonly PUT: "PUT";
    readonly DELETE: "DELETE";
    readonly PATCH: "PATCH";
};
export declare const HTTP_STATUS_CODES: {
    readonly OK: 200;
    readonly CREATED: 201;
    readonly NO_CONTENT: 204;
    readonly BAD_REQUEST: 400;
    readonly UNAUTHORIZED: 401;
    readonly FORBIDDEN: 403;
    readonly NOT_FOUND: 404;
    readonly METHOD_NOT_ALLOWED: 405;
    readonly CONFLICT: 409;
    readonly UNPROCESSABLE_ENTITY: 422;
    readonly INTERNAL_SERVER_ERROR: 500;
    readonly NOT_IMPLEMENTED: 501;
    readonly SERVICE_UNAVAILABLE: 503;
};
export declare const API_VERSIONS: {
    readonly CURRENT: "v2";
};
export declare const PAGINATION_CONSTANTS: {
    readonly DEFAULT_PAGE: 1;
    readonly DEFAULT_LIMIT: 20;
    readonly MAX_LIMIT: 100;
    readonly MIN_LIMIT: 1;
};
export declare const TIME_CONSTANTS: {
    readonly DEFAULT_ATTENDANCE_HISTORY_DAYS: 7;
    readonly MAX_ATTENDANCE_HISTORY_DAYS: 365;
    readonly DATE_FORMAT: "YYYY-MM-DD";
    readonly TIME_FORMAT: "HH:mm:ss";
    readonly DATETIME_FORMAT: "YYYY-MM-DDTHH:mm:ss.SSSZ";
};
export declare const SEARCH_CONSTANTS: {
    readonly MIN_SEARCH_LENGTH: 2;
    readonly MAX_SEARCH_LENGTH: 50;
    readonly DEFAULT_SEARCH_LIMIT: 10;
};
//# sourceMappingURL=api.constants.d.ts.map